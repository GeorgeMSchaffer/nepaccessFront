.table-holder {
    display: inline;
}

.table-like {
    vertical-align: top;
    display: inline-block;
}

.table-like:first-child {
    width: 79%;
    padding-right: 1%;
}

.table-like:last-child {
    width: 20%;
}
  
.table-like div.table-row { 
    display: block;
}

.table-like div.table-row div { 
    display: inline-block;

    /* Limiting height makes the in-between borders consistent if some elements are multi-line and therefore
    require more height, but can result in overflow problems because the cell won't resize large enough.
    Height of all these elements would need to be somehow set to the height of the largest one, dynamically. */
    /* height: 20px; */

    width: 15%;

    margin-top: 1em;
    padding-left: 2.5%;
    padding-right: 2.5%;

    vertical-align: middle;

    border-right: 1px solid black;
}

/** Experimenting with :after border */
/* .table-like div.table-row div:after {
    content: "";
    background: orange;
    position: absolute;
    height: 15%;
    width: 1px;
} */

.table-like div.table-row div:first-child { 
    width: 12.5%;
    padding-left: 0%;
}
.table-like div.table-row div:nth-child(3) { 
    width: 35%;
}
.table-like div.table-row div:last-child { 
    width: 10%;
    padding-right: 0%;
    border-right: none;
}

.cardHeader>span, .cardHeader>.download, .cardHeader>.link {
    padding-left: 0.5em;
    font-weight: bold;
    white-space: normal;
}

span.highlight {
    font-weight: bolder;
}

.fragment-container {
    /* or 129% */
    margin: 15px 10px 5px 10px;
}
span.fragment {
    display: block;
    white-space: normal;
    font-family: Open Sans;
    font-style: normal;
    font-weight: normal;
    font-size: 14px;
    line-height: 18px;
    padding: 10px;
}

span.filename {
    display: block;
    font-weight: bold;
}

span.filename>* {
    display: block;
    font-weight: normal;
}

.tabulator-row .tabulator-cell {
    padding: 10px 10px 0px 10px;
    background: #FFFFFF;
    border: 2px solid #DCDCDC;
    box-sizing: border-box;
}
.cardTitle {
    font-family: Open Sans;
    font-style: normal;
    font-weight: normal;
    font-size: 18px;
    line-height: 125%;
}
.tabulator-cell a.link {
    font-family: Open Sans;
    font-style: normal;
    font-weight: bold;
    font-size: 18px;
    line-height: 125%;
    color: #0067B1;
}
.table-meta {
    font-family: Open Sans;
    font-style: normal;
    font-weight: normal;
    font-size: 14px;
    line-height: 125%;
}
/* .table-like, .table-like div span {
    border-top: 1px solid black;  
} */

/* bold on 1st row */
/* .table-like div:nth-child(1) {
    font-weight: bold;
} */

/** Tabulator cell, row custom CSS */

.tabulator-tableHolder .tabulator-table .tabulator-row .tabulator-cell, 
.tabulator-table .tabulator-row {
    min-height: 84px;
}
.tabulator-table .tabulator-row,
.tabulator>.tabulator-footer {
    border-top: 10px solid #FFFBF1;
}
.tabulator-row>.tabulator-cell,
.tabulator[tabulator-layout=fitColumns] .tabulator-row .tabulator-cell:last-of-type {
    border: 2px solid #DADADA;
}

.tabulator-header {
    display: none;
    /* visibility: hidden; */
}

#post-results-input {
    margin-left: 50px;
}

.fragment:nth-of-type(2n) {
    background: white;
}

.fragment:nth-of-type(odd) {
    background: rgba(196, 196, 196, 0.4);
}